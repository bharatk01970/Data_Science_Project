def expand_combined_keys(self, field_expansions, combine_info):
    import itertools
    new_col = combine_info['new_col']
    keys = combine_info['keys']
    char_limits = combine_info['char_limits']

    # Apply truncation for each key independently (before product)
    truncated_lists = []
    for key in keys:
        vals = field_expansions.get(key, [""])
        limit = char_limits.get(key, '*')
        if limit != '*':
            try:
                limit_int = int(limit)
                vals = [v[:limit_int] if v else "" for v in vals]
            except:
                pass
        truncated_lists.append(vals)
    
    # Generate cartesian product to get combined pairs/triples etc
    product_tuples = list(itertools.product(*truncated_lists))

    # The new combined column will have each element of the tuples in sequence, depending on keys order
    combined_values = []
    for tup in product_tuples:
        # Append values in order, each as separate row
        combined_values.extend(tup)

    return new_col, combined_values